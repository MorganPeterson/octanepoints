name: Release
on:
  push:
    tags: ["v*"]

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    env:
      APP_NAME: octanepoints
      MAIN_PKG: ./cmd/octanepoints
      OS_LIST: "linux windows darwin"
      ARCH_LIST: "amd64 arm64"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Install packaging tools
        run: sudo apt-get update && sudo apt-get install -y zip

      - name: Build all targets
        shell: bash
        run: |
          set -euxo pipefail
          VERSION="${GITHUB_REF_NAME}"
          mkdir -p dist
          for GOOS in $OS_LIST; do
            for GOARCH in $ARCH_LIST; do
              EXT=""
              OUT="${APP_NAME}_${VERSION}_${GOOS}_${GOARCH}"
              BIN="${APP_NAME}"
              if [ "$GOOS" = "windows" ]; then EXT=".exe"; fi

              CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH \
                go build -trimpath -ldflags "-s -w -X main.version=${VERSION}" \
                -o "dist/${BIN}${EXT}" "${MAIN_PKG}"

              pushd dist >/dev/null
              if [ "$GOOS" = "windows" ]; then
                zip -j "${OUT}.zip" "${BIN}${EXT}"
                sha256sum "${OUT}.zip" > "${OUT}.sha256"
              else
                tar -czf "${OUT}.tar.gz" "${BIN}${EXT}"
                sha256sum "${OUT}.tar.gz" > "${OUT}.sha256"
              fi
              rm -f "${BIN}${EXT}"
              popd >/dev/null
            done
          done

      - name: Create GitHub Release & upload artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            dist/*.tar.gz
            dist/*.zip
            dist/*.sha256
